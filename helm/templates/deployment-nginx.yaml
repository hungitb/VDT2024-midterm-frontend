apiVersion: v1
kind: ConfigMap
metadata:
  name: frontend-config-file
data:
  nginx.conf: |
    server {
        listen 80;

        location / {
            root   /var/www/html;
            index  index.html index.htm;
        }

        location /api {
            proxy_pass http://{{ .Values.backend.host }}:{{ .Values.backend.port }};

            proxy_set_header X-Real-IP .$remote_addr;
            proxy_set_header X-Forwarded-For .$proxy_add_x_forwarded_for;
            proxy_set_header Host $host;
            proxy_set_header X-NginX-Proxy true;
        }
    }

    server {
        listen 8081;

        location /stub_status {
            stub_status;
        }
    }
  haproxy.cfg: |
    defaults
      mode http
      timeout client 10s
      timeout connect 5s
      timeout server 10s 
      timeout http-request 10s
    frontend https-in
      bind *:22222 ssl crt /usr/local/etc/haproxy-cert/ssl.crt
      default_backend localhost-frontend
    frontend http-in
      bind *:8080
      default_backend localhost-frontend-metrics
    backend localhost-frontend
      mode http
      server localhost 127.0.0.1:80
    backend localhost-frontend-metrics
      mode http
      server localhost-metrics 127.0.0.1:8081
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-deployment
spec:
  replicas: {{ .Values.frontend.replicaCount }}
  selector:
    matchLabels: {{ .Values.frontend.service.selectorLabels | nindent 6 }}
  template:
    metadata:
      labels: {{ .Values.frontend.service.selectorLabels | nindent 8 }}
    spec:
      containers:
      - name: fe-server
        image: {{ .Values.frontend.image }}
        ports:
        - containerPort: 8081 # port for metrics
        - containerPort: 80 # http
        volumeMounts:
        - name: frontend-nginx-config-file-mount-volumn
          mountPath: /etc/nginx/conf.d
      - name: haproxy-sidecar-frontend
        image: haproxy:2.4.9
        ports:
        - containerPort: 8080 # port for metrics
        - containerPort: 22222 # https
        volumeMounts:
        - name: frontend-haproxy-config-file-mount-volumn
          mountPath: /usr/local/etc/haproxy
        - name: haproxy-sidecar-secret-mount-volumn
          mountPath: /usr/local/etc/haproxy-cert
          readOnly: true
      volumes:
      - name: frontend-nginx-config-file-mount-volumn
        configMap:
          name: frontend-config-file
          items:
          - key: nginx.conf
            path: nginx.conf
      - name: frontend-haproxy-config-file-mount-volumn
        configMap:
          name: frontend-config-file
          items:
          - key: haproxy.cfg
            path: haproxy.cfg
      - name: haproxy-sidecar-secret-mount-volumn
        secret: # Trước khi install chart thì cần phải tạo ra Secret này rồi, có 2 key là ssl.crt, ssl.key
          secretName: haproxy-sidecar-secret
          items:
          - key: ssl.crt
            path: ssl.crt
          - key: ssl.crt.key
            path: ssl.crt.key